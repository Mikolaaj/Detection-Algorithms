import cv2
import torch
import os
import numpy as np
from tkinter import filedialog, Tk
from ultralytics import YOLO  # Import YOLOv11

def choose_model():
    """Wyb√≥r modelu YOLOv11 przez okno dialogowe"""
    root = Tk()
    root.withdraw()
    model_path = filedialog.askopenfilename(title="Wybierz model YOLOv11", filetypes=[("Pliki PyTorch", "*.pt")])
    return model_path

def choose_image_folder():
    """Wyb√≥r folderu ze zdjƒôciami przez okno dialogowe"""
    root = Tk()
    root.withdraw()
    folder_path = filedialog.askdirectory(title="Wybierz folder ze zdjƒôciami")
    return folder_path

def process_images(model, folder_path, device):
    """Przetwarzanie obraz√≥w z folderu za pomocƒÖ YOLOv11"""
    image_files = [f for f in os.listdir(folder_path) if f.lower().endswith((".jpg", ".png", ".jpeg"))]
    
    if not image_files:
        print("‚ùå Brak obraz√≥w w wybranym folderze.")
        return
    
    for image_file in image_files:
        image_path = os.path.join(folder_path, image_file)
        image = cv2.imread(image_path)
        if image is None:
            print(f"‚ö†Ô∏è Nie mo≈ºna za≈Çadowaƒá obrazu: {image_file}")
            continue

        print(f"üì∑ Przetwarzanie: {image_file}...")
        results = model(image, device=device)  # YOLOv11 wykrywa obiekty
        
        detected_image = results[0].plot()  # Rysowanie wykrytych obiekt√≥w
        cv2.imshow("Detekcja YOLOv11", detected_image)
        
        if cv2.waitKey(0) & 0xFF == ord('q'):  # Zamknij okno po naci≈õniƒôciu 'q'
            break
    
    cv2.destroyAllWindows()

if __name__ == "__main__":
    print("üìå Wybierz plik modelu YOLOv11")
    model_path = choose_model()
    if not model_path:
        print("‚ùå Nie wybrano modelu. Ko≈Ñczenie programu.")
        exit()

    # Wyb√≥r urzƒÖdzenia (GPU lub CPU)
    device = "cuda" if torch.cuda.is_available() else "cpu"
    print(f"üñ•Ô∏è U≈ºywane urzƒÖdzenie: {device.upper()}")

    try:
        model = YOLO(model_path)  # YOLOv11 model
    except Exception as e:
        print(f"‚ùå B≈ÇƒÖd podczas ≈Çadowania modelu: {e}")
        exit()

    print("üìÇ Wybierz folder ze zdjƒôciami")
    folder_path = choose_image_folder()
    if not folder_path:
        print("‚ùå Nie wybrano folderu. Ko≈Ñczenie programu.")
        exit()

    process_images(model, folder_path, device)
